notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: Mg/NzXDRqQad5Neiz1kmKZfOuOKOTzMXtJZDV/VYDWzHQWRRJJn5k3lBMRWzwv5feNsY3AuET4AiBU93kX1+qZ49ZWcBZtfsH9udgne1d7Oxd/DaqXfWbbznae0VRJbHAsoX2ft+L7QnHqneRpnojgOeh8+Z0/guREmFIIqXMg1IV+vDwPHX/LCZWu9Zx5gBuCSn1J4RWATToA8h0tKbXE8o1+zeLSavxRu9UzARwIUlJ2JU5rRnOyn5MZdExeBXfiyMmi0t8/znXigUt4l5xSHSktBodCCSo+WwFFiDHrsSzRzFgkOZwF+NVahnxmRpUfE2izXb5M7ezU2rYiOk6F+UiH2ll0zkyUSRVe4FJdN1S9JVXRs7oHZxFsOteCXdbzLWgDcHcI2FBm14f3QIufuN7RMq4lwp+a7jT60nIToBN1bBhGQ68xxwen7mszmc/cDfX5VYM3nCQoVM1G0sYn2iSa9EUeXiXl+U4Bw62WodA/xzLrgtLXHuK7XSlLYDm5pVRSIGQBGT2L8uVxkq4oYhDmyuc5vqnTywNV3n3u2zkG0i9ls1Q/N/HRTLRZWsBPW/AYDvlnMpDaGzfvmyiCUWECKIHXDaSGq/x917i7aWdt5epYApucqpFziWnyL3skyyT3R06+WLAgmzaJL5q2EtUyi2xH/1D5DMPm1Ml9M=
matrix:
  fast_finish: true
  include:
    - name: "Test"

      env:
        - META_PASSWORD=""
      services:
        - postgresql
      before_script:
        - psql -c 'drop database if exists test_db;' -U postgres
        - psql -c 'create database test_db;' -U postgres
      addons:
        postgresql: '9.5'

      language: scala
      dist: trusty
      scala:
          - 2.12.7
      jdk:
        - oraclejdk8
      cache:
        directories:
          - $HOME/.ivy2/cache
          - $HOME/.sbt/boot/
      before_cache:
        # Tricks to avoid unnecessary cache updates
        - find $HOME/.ivy2 -name "ivydata-*.properties" -delete
        - find $HOME/.sbt -name "*.lock" -delete

    - name: "Release"
      language: python
      if: branch = master AND type = push
      python: 3.7
      dist: bionic
      services:
        - docker
      cache:
        pip: true
        directories:
          - $HOME/.ivy2/cache
          - $HOME/.sbt/boot/
      before_install:
        # Authenticate docker client to deploy aws registry
        - pip install awscli
        - $(aws ecr get-login --no-include-email --region eu-west-1)

        # Fetch deploy repo
        - git clone --depth 1 https://knowit-at-ndla:$TRAVIS_RELEASE_GITHUB_TOKEN@github.com/ndlano/deploy.git ../deploy

        # Setup env
        - export NDLA_HOME=$(realpath $(pwd)/../)
        - export NDLA_DEPLOY=$NDLA_HOME/deploy
        - export DEPLOY_VERSION=$(git -C $NDLA_DEPLOY rev-parse --short=7 HEAD)
        - export DEPLOY_DOCKER_REPO=784120951859.dkr.ecr.eu-west-1.amazonaws.com/ndla/deploy

        # Get cache, and don't fail if missing
        - docker pull $DEPLOY_DOCKER_REPO:$DEPLOY_VERSION || true
      install:
        - eval "$($NDLA_DEPLOY/scripts/bin/ndla init -)"
      env:
        - SSH_AUTH_SOCK=/tmp/mock_sock
      script:
        - ndla release listing-api --update-chart

      before_cache: # Save docker image as cache
        - docker push $DEPLOY_DOCKER_REPO:$DEPLOY_VERSION

        # Tricks to avoid unnecessary cache updates
        - find $HOME/.ivy2 -name "ivydata-*.properties" -delete
        - find $HOME/.sbt -name "*.lock" -delete

  allow_failures:
      - name: "Release"
    
